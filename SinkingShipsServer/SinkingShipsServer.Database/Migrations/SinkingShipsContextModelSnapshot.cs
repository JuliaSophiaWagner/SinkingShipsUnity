// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SinkingShipsServer.Database;

namespace SinkingShipsServer.Database.Migrations
{
    [DbContext(typeof(SinkingShipsContext))]
    partial class SinkingShipsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SinkingShipsServer.Database.Models.GameInstances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("GameInstances");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.GridElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GameInstancesId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenShot")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShip")
                        .HasColumnType("bit");

                    b.Property<int?>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameInstancesId");

                    b.HasIndex("ShipId");

                    b.ToTable("GridElement");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.PlayerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SinkingShipsPlayers");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountShot")
                        .HasColumnType("int");

                    b.Property<int?>("GameInstancesId")
                        .HasColumnType("int");

                    b.Property<bool>("ShipHasSunk")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameInstancesId");

                    b.ToTable("Ship");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.GridElement", b =>
                {
                    b.HasOne("SinkingShipsServer.Database.Models.GameInstances", null)
                        .WithMany("Fields")
                        .HasForeignKey("GameInstancesId");

                    b.HasOne("SinkingShipsServer.Database.Models.Ship", null)
                        .WithMany("Fields")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.Ship", b =>
                {
                    b.HasOne("SinkingShipsServer.Database.Models.GameInstances", null)
                        .WithMany("Ships")
                        .HasForeignKey("GameInstancesId");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.GameInstances", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Ships");
                });

            modelBuilder.Entity("SinkingShipsServer.Database.Models.Ship", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
